meta:
  name: 'DKPerms English'
  module: 'DKPerms'
  language:
    name: 'English'
    localizedName: 'English'
    code: 'en'
messages:
  dkperms.prefix: '&8» &9DKPerms &8|&f'

  dkperms.command.perms.help: '${dkperms.prefix} &7Commands&8:
  &7/perms info &8- &7Get information about DKPerms
  &7/perms sync &8- &7Reload all permissions, groups and players
  &7/perms migrate &8- &7Import permissions from another system
  &7/perms groups &8- &7List all permission groups
  &7/perms group &8- &7For more group information
  &7/perms user &8- &7For more user information'

  dkperms.command.invalid.syntax: '${dkperms.prefix} &cInvalid usage of &e{command} &ccommand.\n\n  &8» &7{usage} \n'
  dkperms.sender.only.console: '${dkperms.prefix} &cThis command can only be executed from console.'
  dkperms.scope.invalid: '${dkperms.prefix} &cThe scope &e{scope} &cis not valid.'
  dkperms.scope.notfound: '${dkperms.prefix} &cThe scope &e{scope} &cwas not found.'

  dkperms.object.meta.help: '${dkperms.prefix} &7Meta commands&8:
  &7/perms {type} <name>
   &8- &7meta set <key> <value> [scope]
   &8- &7meta unset <key> [scope]
   &8- &7meta show <key> [scope]
   &8- &7meta clear [scope]
   &8- &7meta list [scope]
   &8- &7meta tree

  &8» &7Use &8__ &7for spaces in values'
  dkperms.object.meta.set: '${dkperms.prefix} &7The meta entry of {object.type} &e{object} &7was changed&8: ${dkperms.object.meta.info}'
  dkperms.object.meta.unset: '${dkperms.object.meta.set}'
  dkperms.object.meta.show: '${dkperms.prefix} &7The meta entry of {object.type} &e{object}: ${dkperms.object.meta.info}'
  dkperms.object.meta.info: '&8
  &8» &7Key&8: &e{key}
  &8» &7Value&8: &e{value}
  &8» &7Scope&8: &e{scope}'
  dkperms.object.meta.list: '${dkperms.prefix} &7Meta entries of {object.type} &e{object.name}
  &8» &7Scope&8: &e{scope} @for("entry" in {entries},${dkperms.object.meta.list.loop},"\n","\n")'
  dkperms.object.meta.list.loop: ' &8- &7{entry.key}&8: &e{entry.value}'
  dkperms.object.meta.tree.header: '${dkperms.prefix} &7Meta tree of {object.type} &e{object}'
  dkperms.object.meta.tree.scope: '{spaces}&8» &9{scope.key}&8=&9{scope.name} &8(&7{scope.level}&8)'
  dkperms.object.meta.tree.entry: '{spaces}  &8- &7{entry.key}&8: &e{entry.value}'
  dkperms.object.meta.clear: '${dkperms.prefix} &7The meta of {object.type.name} &e{object.name} &7was cleared.
  &8» &7Scope&8: &e{scope}'

  dkperms.object.permission.help: '${dkperms.prefix} &7Permission commands&8:
  &7/perms {type} <name>
   &8- &7permission set <key> <value> [time] [unit] [scope]
   &8- &7permission unset <key> [scope]
   &8- &7permission show <key> [scope]
   &8- &7permission clear [scope]
   &8- &7permission list [scope]
   &8- &7permission tree'
  dkperms.object.permission.set: '${dkperms.prefix} &7The permission of {type} &e{object} &7was changed&8: ${dkperms.object.permission.info}'
  dkperms.object.permission.unset: '${dkperms.prefix} &7The permission of {object.type} &e{object.name} &7was changed&8: ${dkperms.object.permission.info}'
  dkperms.object.permission.show: '${dkperms.prefix} &7The permission of {type} &e{object}&8: ${dkperms.object.permission.info}'
  dkperms.object.permission.info: '&8
  &8» &7Permission&8: &e{permission}
  &8» &7Action&8: &e{action}
  &8» &7Timeout&8: &e{timeout}
  &8» &7Remaining&8: &e{remaining}
  &8» &7Scope&8: &e{scope}'
  dkperms.object.permission.list: '${dkperms.prefix} &7Permissions of {object.type} &e{object.name}
  &8» &7Scope&8: &e{scope} @for("entry" in {entries},${dkperms.object.permission.list.loop},"\n","\n")'
  dkperms.object.permission.list.loop: ' &8- &7{entry.permission} &8(&e{entry.action}&8)'
  dkperms.object.permission.tree.header: '${dkperms.prefix} &7Permission tree of {object.type} &e{object}'
  dkperms.object.permission.tree.scope: '{spaces}&8» &9{scope.key}&8=&9{scope.name} &8(&7{scope.level}&8)'
  dkperms.object.permission.tree.entry: '{spaces}  &8- &7{entry.permission} &8(&e{entry.action}&8)'
  dkperms.object.permission.clear: '${dkperms.prefix} &7The permissions of {object.type.name} &e{object.name} &7 were cleared.
  &8» &7Scope&8: &e{scope}'

  dkperms.object.group.help: '${dkperms.prefix} &7Group commands&8:
  &7/perms {type} <name>
   &8- &7group set <group> [time] [unit] [scope]
   &8- &7group add <group> [scope]
   &8- &7group remove <group> [scope]
   &8- &77group clear [scope]
   &8- &7group list [scope]
   &8- &77group tree'
  dkperms.object.group.set: '${dkperms.prefix} &7The group of {object.type} &e{object} &7was set to&8: ${dkperms.object.group.info}'
  dkperms.object.group.add: '${dkperms.prefix} &7A group was added to {object.type} &e{object}&8: ${dkperms.object.group.info}'
  dkperms.object.group.info: '&8
  &8» &7Group&8: &e{group.name}
  &8» &7Action&8: &e{action}
  &8» &7Timeout&8: &e{timeout}
  &8» &7Remaining&8: &e{remaining}
  &8» &7Scope&8: &e{scope}'
  dkperms.object.group.remove: '${dkperms.prefix} &7A group was removed from {object.type} &e{object}&8: ${dkperms.object.group.info}'
  dkperms.object.group.clear: '${dkperms.prefix} &7The meta of {object.type.name} &e{object.name} &7was cleared.
  &8» &7Scope&8: &e{scope}'
  dkperms.object.group.list: '${dkperms.prefix} &7Groups of {object.type} &e{object.name}
  &8» &7Scope&8: &e{scope} @for("entry" in {entries},${dkperms.object.permission.list.loop},"\n","\n")'
  dkperms.object.group.list.loop: ' &8- &7{entry.group.name} &8(&e{entry.action}&8)'
  dkperms.object.group.tree.header: '${dkperms.prefix} &7Group tree of {object.type} &e{object}'
  dkperms.object.group.tree.scope: '{spaces}&8» &9{scope.key}&8=&9{scope.name} &8(&7{scope.level}&8)'
  dkperms.object.group.tree.entry: '{spaces}  &8- &7{entry.group.name} &8(&e{entry.action}&8)'

  dkperms.user.help: '${dkperms.prefix} &7Group commands&8:
  &7/perms user <name>
   &8- &7permission &8- &7Manage group permissions
   &8- &7meta &8- &7Manage group metas
   &8- &7group &8- &7Manage inheritance groups'
  dkperms.user.notfound: '${dkperms.prefix} &cThe user &c{user} &cwas not found.'
  dkperms.user.info: '${dkperms.prefix} &7Player information
  &8» &7Id&8: &e{user.id}
  &8» &7Name&8: &e{user.property.color}{user.name}
  &8» &7UniqueId&8: &e{user.uniqueId}
  &8» &7Scope&8: &e{user.scope}
  &8
  &8» &7Team&8: &e{user.boolProperty.team}
  &8» &7Color&8: &e{user.property.color}
  &8» &7Chat&8: &e{user.property.chat} {user.name}
  &8» &7Tablist&8: &e{user.property.prefix}{user.name}{user.property.suffix}
  &8
  &8» &7Groups&8:
  @for("group" in {user.globalGroups},${dkperms.user.info.groups.loop},"\n")'
  dkperms.user.info.groups.loop: '  &8- {group.property.color}{group.name}'

  dkperms.group.help: '${dkperms.prefix} &7Group commands&8:
  &7/perms group <name>
   &8- &7permission &8- &7Manage group permissions
   &8- &7meta &8- &7Manage group metas
   &8- &7group &8- &7Manage inheritance groups'
  dkperms.group.notfound: '${dkperms.prefix} &cThe group &e{group} &cwas not found.'
  dkperms.group.info: '${dkperms.prefix} &7Group information
  &8» &7Id&8: &e{group.id}
  &8» &7Name&8: &e{group.property.color}{group.name}
  &8» &7Scope&8: &e{group.scope}
  &8
  &8» &7Description&8: &e{group.property.description}
  &8» &7Default&8: &e{group.boolProperty.default}
  &8» &7Priority&8: &e{group.intProperty.priority}
  &8
  &8» &7Team&8: &e{group.boolProperty.team}
  &8» &7Color&8: &e{group.property.color}
  &8» &7Chat&8: &e{group.property.chat}Player
  &8» &7Tablist&8: &e{group.property.prefix}Player{group.property.suffix}
  &8
  &8» &7Inheritance Groups&8:
  @for("group" in {group.globalGroups},${dkperms.group.info.groups.loop},"\n")'
  dkperms.group.info.groups.loop: '  &8- {group.property.color}{group.name}'
  dkperms.group.alreadyExists: '${dkperms.prefix} &7The group &e{name} &7does already exist.'
  dkperms.group.created: '${dkperms.prefix} &7The group &e{group.name} &7was created'
  dkperms.group.delete.confirm: '${dkperms.prefix} &7Are you sure to delete the group &e{group.name}&7? !["&8[&eConfirm&8]"]("run://perms group delete confirm")'
  dkperms.group.deleted: '${dkperms.prefix} &7The group &e{group.name} &7was deleted'
  dkperms.group.list: '${dkperms.prefix} &7Available permission groups&8:
  &8» &7Scope&8: &e{scope} @for("group" in {groups},${dkperms.group.list.loop},"\n","\n")'
  dkperms.group.list.loop: '&8- &7{group.property.color}{group.name}'
